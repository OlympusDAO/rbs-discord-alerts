## NOTE:
## BigDecimal and BigInt are typed to strings here, because that is what the GraphQL API returns.
## Specifying "number" as the type will result in the typings referring to numbers, but the underlying
## value will be a string, which makes the code behave unpredictably. Better to be explicit and force casting.
generates:
  src/graphql/bondMarket.ts:
    schema: https://api.thegraph.com/subgraphs/name/olympusdao/bonds
    documents: "src/graphql/bondMarket.graphql"
    plugins:
      - typescript
      - typescript-operations
      - typed-document-node
    config:
      preResolveTypes: true
      scalars:
        BigDecimal: string
        BigInt: string
        Bytes: Uint8Array # https://thegraph.com/docs/en/developing/assemblyscript-api/#bytes
    hooks:
      afterOneFileWrite:
        - yarn eslint --config ./.eslintrc.js --fix
  src/graphql/rangeSnapshot.ts:
    schema: https://api.thegraph.com/subgraphs/name/olympusdao/rbs
    documents: "src/graphql/rangeSnapshot.graphql"
    plugins:
      - typescript
      - typescript-operations
      - typed-document-node
    config:
      preResolveTypes: true
      scalars:
        BigDecimal: string
        BigInt: string
        Bytes: Uint8Array # https://thegraph.com/docs/en/developing/assemblyscript-api/#bytes
    hooks:
      afterOneFileWrite:
        - yarn eslint --config ./.eslintrc.js --fix
  src/graphql/priceSnapshot.ts:
    schema: https://api.thegraph.com/subgraphs/name/olympusdao/olympus-protocol-metrics
    documents: "src/graphql/priceSnapshot.graphql"
    plugins:
      - typescript
      - typescript-operations
      - typed-document-node
    config:
      preResolveTypes: true
      scalars:
        BigDecimal: string
        BigInt: string
        Bytes: Uint8Array # https://thegraph.com/docs/en/developing/assemblyscript-api/#bytes
    hooks:
      afterOneFileWrite:
        - yarn eslint --config ./.eslintrc.js --fix
